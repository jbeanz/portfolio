name: wave-app Tagged Docker Image Build

on:
  release:
    types: [published]

env:
  REGISTRY: ghcr.io/pulse-analytics
  REGISTRY_REPO_NAME: wave-app
  CONTAINER_NAME: wave_app_prod
  GITHUB_USERNAME: pulse-analytics
  COMPOSE_FILE: docker-compose.production.yml

jobs:
  build_docker_container:
    runs-on: [self-hosted, linux, x64, wave]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Configure NPM
        run: |
          echo "//npm.pkg.github.com/:_authToken=$NPM_TOKEN" > .npmrc
          echo "@pulse-analytics:registry=https://npm.pkg.github.com" >> .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Login to Github Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Get Version Tag
        id: tag
        uses: dawidd6/action-get-tag@v1
      - name: Build Version Tagged Image and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: true
          file: ./Dockerfile
          tags: ghcr.io/pulse-analytics/wave-app:${{steps.tag.outputs.tag}}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Copy Scripts over to Remote Machine
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_PRIVATE_HOST_PROD }}
          username: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
          key: ${{ secrets.DIGITAL_OCEAN_PRIVATE_KEY }}
          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
          source: '.github/scripts/*.sh,docker-compose.production.yml'
          target: '/home/deploy'

      - name: On DigitalOcean server, pull env files from AWS
        uses: appleboy/ssh-action@master
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          S3_BUCKET_URL: s3://pulse-analytics-config/dot-env/pulse-analytics/wave-app/.env.production
        with:
          host: ${{ secrets.DO_PRIVATE_HOST_PROD }}
          username: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
          key: ${{ secrets.DIGITAL_OCEAN_PRIVATE_KEY }}
          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
          envs: AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,S3_BUCKET_URL
          script: |
            export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY S3_BUCKET_URL=$S3_BUCKET_URL
            bash ./.github/scripts/pull_env_file.sh

      - name: On DigitalOcean server, start docker containers
        uses: appleboy/ssh-action@master
        env:
          IMAGE_TAG: ${{ steps.tag.outputs.tag }}
        with:
          host: ${{ secrets.DO_PRIVATE_HOST_PROD }}
          username: ${{ secrets.DIGITAL_OCEAN_USERNAME }}
          key: ${{ secrets.DIGITAL_OCEAN_PRIVATE_KEY }}
          passphrase: ${{ secrets.PRIVATE_KEY_PASSPHRASE }}
          envs: REGISTRY,REGISTRY_REPO_NAME,CONTAINER_NAME,COMPOSE_FILE,IMAGE_TAG
          script: |
            export REGISTRY=$REGISTRY IMAGE_TAG=$IMAGE_TAG REGISTRY_REPO_NAME=$REGISTRY_REPO_NAME CONTAINER_NAME=$CONTAINER_NAME COMPOSE_FILE=$COMPOSE_FILE
            bash ./.github/scripts/run_production_container.sh
